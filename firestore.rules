rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      // Users can read/write their own profile
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // All authenticated users can read any user profile (for matching/searching)
      allow read: if request.auth != null;
    }
    
    // Offers collection - offer management
    match /offers/{offerId} {
      // All authenticated users can read any offer
      allow read: if request.auth != null;
      
      // Only authenticated service providers can create offers
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isServiceProvider == true;
      
      // Only the creator of the offer can update or delete it
      allow update, delete: if request.auth != null && 
        resource.data.providerId == request.auth.uid;
    }
    
    // Appointments collection - appointment management
    match /appointments/{appointmentId} {
      // All authenticated users can read any appointment
      allow read: if request.auth != null;
      
      // Only authenticated regular users (customers) can create appointments
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isServiceProvider == false;
      
      // Only the customer who created the appointment can delete it
      allow delete: if request.auth != null && 
        resource.data.customerId == request.auth.uid;
      
      // Both the customer and service provider can update the appointment
      allow update: if request.auth != null && 
        (resource.data.customerId == request.auth.uid || 
         resource.data.serviceProviderId == request.auth.uid);
    }
  }
}